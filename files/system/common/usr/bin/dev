#!/usr/bin/env bash
set -euo pipefail
IFS=$'\n\t'

log() { echo "[INFO] $1"; }

#
# ─── SUDO & DETECT REAL USER ─────────────────────────────────────────────────
#
log "Checking sudo credentials…"
sudo -v

if [[ -n "${SUDO_UID:-}" ]]; then
  CURRENT_UID=$SUDO_UID
  CURRENT_GID=$SUDO_GID
  CURRENT_USER=$SUDO_USER
  CURRENT_GROUP=$(getent group "$CURRENT_GID" | cut -d: -f1)
else
  CURRENT_UID=$(id -u)
  CURRENT_GID=$(id -g)
  CURRENT_USER=$(id -un)
  CURRENT_GROUP=$(id -gn)
fi

#
# ─── ONLY FAKE‐INTO NSS FOR DOMAIN USERS ───────────────────────────────────────
#
# A “local” user will have an entry in /etc/passwd; a domain user
# typically will *not*.
if grep -qE "^${CURRENT_USER}:" /etc/passwd; then
  log "$CURRENT_USER is a local user. Skipping /etc/passwd & /etc/group rewrites."
else
  log "Detected domain user: $CURRENT_USER. Faking identity into NSS..."

  log "Rewriting /etc/passwd for $CURRENT_USER (UID $CURRENT_UID)"
  sudo sed -i \
    -e "/^${CURRENT_USER}:/d" \
    -e "/^[^:]*:[^:]*:${CURRENT_UID}:/d" \
    /etc/passwd
  getent passwd "$CURRENT_USER" | sudo tee -a /etc/passwd >/dev/null

  log "Rewriting /etc/group for $CURRENT_GROUP (GID $CURRENT_GID)"
  sudo sed -i \
    -e "/^${CURRENT_GROUP}:/d" \
    -e "/^[^:]*:[^:]*:${CURRENT_GID}:/d" \
    /etc/group
  getent group "$CURRENT_GROUP" | sudo tee -a /etc/group >/dev/null

  for F in subuid subgid; do
    log "Resetting /etc/$F for $CURRENT_USER"
    sudo sed -i "/^${CURRENT_USER}:/d" /etc/$F
    echo "${CURRENT_USER}:100000:65536" | sudo tee -a /etc/$F >/dev/null
  done
fi

#
# ─── THE REST OF YOUR TOOLBOX SETUP ──────────────────────────────────────────
#
DEV_INSTALL_SCRIPT="$HOME/.dev-install.sh"
CONTAINER_NAME="dev-snry"
IMAGE="fedora-toolbox:latest"
INIT_MARKER="$HOME/.toolbox_initialized"

if [[ ! -f "$INIT_MARKER" ]]; then
  log "Initializing '$CONTAINER_NAME'…"

  cat > "$DEV_INSTALL_SCRIPT" <<'EOT'
#!/usr/bin/env bash
set -euo pipefail

sudo dnf upgrade -y
sudo dnf copr enable -y atim/starship \
  || echo "already enabled"
sudo dnf copr enable -y agriffis/neovim-nightly \
  || echo "already enabled"
sudo dnf config-manager addrepo \
  --from-repofile=https://cli.github.com/packages/rpm/gh-cli.repo \
  || echo "already enabled"
sudo dnf install -y gh git zsh zsh-autosuggestions \
  ncurses-term zsh-syntax-highlighting starship vim \
  neovim golang
go install golang.org/x/tools/gopls@latest
EOT

  chmod +x "$DEV_INSTALL_SCRIPT"

  if ! toolbox list | grep -q "$CONTAINER_NAME"; then
    log "Creating a new toolbox named '$CONTAINER_NAME'"
    toolbox create --image "$IMAGE" "$CONTAINER_NAME"
  else
    log "Toolbox '$CONTAINER_NAME' already exists"
  fi

  log "Running the development installation script inside the toolbox"
  toolbox run -c "$CONTAINER_NAME" "$DEV_INSTALL_SCRIPT"

  log "Creating the initialization marker file at $INIT_MARKER"
  touch "$INIT_MARKER"

  log "Toolbox '$CONTAINER_NAME' has been initialized."
fi

toolbox enter "$CONTAINER_NAME"